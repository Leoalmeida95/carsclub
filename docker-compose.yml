version: '3'
services:
    api1:
        container_name: api1
        build:
            context: .
            dockerfile: Dockerfile  
        environment:
          SECRET_KEY: "hard-secret-key"
          MONGODB_URI: "mongodb://dbserver:27017/carsclubdb"
        depends_on:
        - dbserver
        links:
        - dbserver
        ports:
        - '5001:5000'
        networks:
        - frontend
        - backend

    api2:
        container_name: api2
        build:
            context: .
            dockerfile: Dockerfile  
        environment:
            SECRET_KEY: "hard-secret-key"
            MONGODB_URI: "mongodb://dbserver:27017/carsclubdb"
        depends_on:
        - dbserver
        links:
        - dbserver
        ports:
        - '5002:5000'
        networks:
        - frontend
        - backend

    dbserver:
        container_name: dbserver
        image: 'mongo:latest'
        restart: unless-stopped
        ports:
        - '27017:27017'
        volumes:
        - ./data/db:/data/db
        networks:
        - backend

    webserver:
        build:
            context: nginx
            dockerfile: Dockerfile
        image: nginx:latest
        container_name: webserver
        restart: unless-stopped
        environment:
            APP_ENV: "prod"
            APP_NAME: "webserver"
            APP_DEBUG: "true"
            SERVICE_NAME: "webserver"
        ports:
            - "90:80"
            - "443:443"
        volumes:
            - nginxdata:/var/log/nginx
        depends_on:
            - api1
            - api2
        networks:
            - frontend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    nginxdata:
        driver: local